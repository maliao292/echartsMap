<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="SmmsRoomIprange_idc"> 
<sql id="listColumns">
	
            srii.RID,
            srii.ACCESS_ID,
            srii.ROOM_IDX,
            srii.BEGIN_IP,
            srii.END_IP,
            srii.MODIFIEDTIME,
            srii.CREATTIME,
            srii.RECORDSTATE,
            sii.IDC_ID,
            sii.IDC_NAME,
            ssr.ROOM_NAME,
            ssr.ROOM_ADDRESS
</sql>
<sql id="detailColumns">
	
            srii.RID,
            srii.ACCESS_ID,
            srii.ROOM_IDX,
            srii.BEGIN_IP,
            srii.END_IP,
            srii.MODIFIEDTIME,
            srii.CREATTIME,
            srii.RECORDSTATE,
            sii.IDC_ID,
            sii.IDC_NAME,
            ssr.ROOM_NAME,
            ssr.ROOM_ADDRESS
</sql>
<select id="listData" parameterType="hashmap" resultType="hashmap"> 
	select sii.IDC_NAME as TRANS_IDC_ID,<include refid="listColumns"/>,CONCAT(CONCAT(srii.BEGIN_IP,'_'),srii.END_IP) as DST_IP 
	from SMMS_ROOM_IPRANGE as srii
    left join SMMS_ROOM_INFO as ssr
    on srii.ACCESS_ID=ssr.ACCESS_ID and srii.ROOM_IDX=ssr.ROOM_IDX
    left JOIN smms_idc_info as sii 
    on srii.ACCESS_ID=sii.IDC_ID
   
	<where>
		srii.RECORDSTATE='0'
		<if test="search_hiddenfld_id_DST_IP_SEARCH!=null and search_hiddenfld_id_DST_IP_SEARCH!='' ">  
           
            
		and substring_index(#{search_hiddenfld_id_DST_IP_SEARCH},'.',3) = substring_index(srii.BEGIN_IP,'.',3)
		and cast(substring_index(#{search_hiddenfld_id_DST_IP_SEARCH},'.',-1) as signed integer )
		&gt;=
		cast(substring_index(srii.BEGIN_IP,'.',-1) as signed integer )
		and
		cast(substring_index(#{search_hiddenfld_id_DST_IP_SEARCH},'.',-1) as signed integer )
		&lt;=
		cast(substring_index(srii.END_IP,'.',-1) as signed integer )            
            
		</if>
        <if test="whereCondition!=null and whereCondition!='' ">   
             ${whereCondition}
        </if>		
	</where> 
	
        <if test="order!=null and order!='' ">   
             order by ${order}
        </if>
        
			
</select> 

<select id="totalNum" parameterType="hashmap" resultType="hashmap"> 
	select count(*) NUM  from SMMS_ROOM_IPRANGE as srii
    left join SMMS_ROOM_INFO as ssr
    on srii.ACCESS_ID=ssr.ACCESS_ID and srii.ROOM_IDX=ssr.ROOM_IDX
    left JOIN smms_idc_info as sii 
    on srii.ACCESS_ID=sii.IDC_ID
	<where>
		srii.RECORDSTATE='0'
		<if test="search_hiddenfld_id_DST_IP_SEARCH!=null and search_hiddenfld_id_DST_IP_SEARCH!='' ">  
            and substring_index(#{search_hiddenfld_id_DST_IP_SEARCH},'.',3) = substring_index(srii.BEGIN_IP,'.',3)
		and cast(substring_index(#{search_hiddenfld_id_DST_IP_SEARCH},'.',-1) as signed integer )
		&gt;=
		cast(substring_index(srii.BEGIN_IP,'.',-1) as signed integer )
		and
		cast(substring_index(#{search_hiddenfld_id_DST_IP_SEARCH},'.',-1) as signed integer )
		&lt;=
		cast(substring_index(srii.END_IP,'.',-1) as signed integer )  		
		</if>
        <if test="whereCondition!=null and whereCondition!='' ">   
             ${whereCondition}
        </if>		
	</where> 
</select> 

<delete id="deleteData" parameterType="hashmap" > 
	delete from SMMS_ROOM_IPRANGE  where RID = #{RID}
</delete> 

<select id="viewDetail" parameterType="hashmap" resultType="hashmap"> 
	select sii.IDC_NAME as TRANS_IDC_ID,<include refid="detailColumns"/>  from SMMS_ROOM_IPRANGE as srii
    left join SMMS_ROOM_INFO as ssr
    on srii.ACCESS_ID=ssr.ACCESS_ID and srii.ROOM_IDX=ssr.ROOM_IDX
    left JOIN smms_idc_info as sii 
    on srii.ACCESS_ID=sii.IDC_ID  where srii.RID = #{RID} 
</select> 

<update id="deleteUpdate" parameterType="hashmap" > 
	update SMMS_ROOM_IPRANGE  set RECORDSTATE=#{RECORDSTATE} where RID=#{RID}
</update> 
 
<select id="updateDetail" parameterType="String" resultType="hashmap"> 
      select <include refid="detailColumns"/> from SMMS_ROOM_IPRANGE  where RID = #{RID} 
</select> 

<insert id="insertSave" parameterType="hashmap" >
	insert into SMMS_ROOM_IPRANGE (
            <if test="RID != null ">RID,</if>
            <if test="ACCESS_ID != null ">ACCESS_ID,</if>
            <if test="ROOM_IDX != null ">ROOM_IDX,</if>
            <if test="BEGIN_IP != null ">BEGIN_IP,</if>
            <if test="END_IP != null ">END_IP,</if>
            <if test="MODIFIEDTIME != null ">MODIFIEDTIME,</if>
            <if test="CREATTIME != null ">CREATTIME,</if>
            <if test="RECORDSTATE != null ">RECORDSTATE</if>)
	   values (
           <if test="RID != null ">#{RID},</if>
           <if test="ACCESS_ID != null ">#{ACCESS_ID},</if>
           <if test="ROOM_IDX != null ">#{ROOM_IDX},</if>
           <if test="BEGIN_IP != null ">#{BEGIN_IP},</if>
           <if test="END_IP != null ">#{END_IP},</if>
           <if test="MODIFIEDTIME != null ">#{MODIFIEDTIME},</if>
           <if test="CREATTIME != null ">#{CREATTIME},</if>
           <if test="RECORDSTATE != null ">#{RECORDSTATE}</if>)
</insert> 

<update id="updateSave" parameterType="hashmap" > 
	update SMMS_ROOM_IPRANGE   
		<set>
				    <if test="ACCESS_ID!=null"> ACCESS_ID=#{ACCESS_ID},</if> 
		    <if test="ROOM_IDX!=null"> ROOM_IDX=#{ROOM_IDX},</if> 
		    <if test="BEGIN_IP!=null"> BEGIN_IP=#{BEGIN_IP},</if> 
		    <if test="END_IP!=null"> END_IP=#{END_IP},</if> 
		    <if test="MODIFIEDTIME!=null"> MODIFIEDTIME=#{MODIFIEDTIME},</if> 
		    <if test="RECORDSTATE!=null"> RECORDSTATE=#{RECORDSTATE},</if> 
		</set>
	where RID=#{RID}
</update> 

</mapper>
